#!/bin/bash

date

free
echo "== warmup start =="
julia <<__EOF__
import Pkg
try Pkg.rm("Pluto") catch end
Pkg.add(url="https://github.com/fonsp/Pluto.jl", rev="binder-static-to-live-1")
Pkg.instantiate();
Pkg.API.precompile();
__EOF__

echo "== warmup start =="
julia <<__EOF__
import Pkg
Pkg.activate(".")
Pkg.instantiate();
Pkg.API.precompile();
__EOF__

julia --project=$(pwd) --trace-compile="precompile.jl" notebook.jl
echo "== warmup done =="
! wc -l precompile.jl
echo ""

free

julia <<__EOF__
import Pkg
Pkg.activate(mktempdir())
Pkg.add(Pkg.PackageSpec(name="PackageCompiler", version="1.2.4"))
using PackageCompiler
Pkg.activate(".")
proj = Pkg.API.project();
pkgs = Symbol.(keys(proj.dependencies))
proj.ispackage && push!(pkgs, Symbol(proj.name));
running = Ref(true)
@async while running[]
    @info "Still alive!"
    try run(Cmd(["date"])) catch end
    try rm(download("https://julialang.org/")) catch end
    sleep(10)
end
create_sysimage(pkgs, precompile_statements_file="precompile.jl"; sysimage_path="notebook_sysimage.so", cpu_target="generic")
running[] = false
__EOF__

ls -lha
